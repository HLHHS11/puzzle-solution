まず、関数に配列を渡す時は、ポインタとして渡すことになっている

一方で、配列は、各要素に値を直接入れるのではなく、値へのポインタを入れることができる。	//ここの解釈ちょっと不安
すなわち、配列という箱は実体として見て良いが、その中には各値の参照先が描かれた紙が入っているようなもの

では、ここで作りたい二次元配列はどうなっているのかというと、
まず、外側の配列を用意する。3行5列の配列だとしたら、まず「３行」に対応する配列を作る。
で、この配列の各要素に、「５列」に対応する配列がそれぞれ入っていく

で、最深部から見ていくと
各値へのポインタを要素としてもつ、二層目の配列
二層目の配列へのポインタを要素としてもつ、一層目の配列
そして、一層目の配列はmain関数では実体として扱えるのだが、関数に渡すときにはポインタで参照渡しする

先程の箱と、参照先の紙のたとえで考え、参照先はボールだとするなら
main関数内には、箱の実体がある。
その箱を開けると、中には「より小さい箱」ではなく、「各小さい箱の住所が書かれた紙」が入っている。
それを読んで、各住所に向かうと「より小さい箱」の実体に出会うことができて、その箱の中には「ボール（各値）」が入っているのではなく、「各ボールの住所が書かれた紙」が入っている。
それでいて、main関数から他の関数へは『「大きな箱の実体」の住所が書かれた紙』を渡すので、ポインタは三重になる


