1.パズルゲーム作成の流れ {
    nx*nyのマス目を用意 {
        コマンドラインでscanfしてint型のnx, nyを取得 {
            if (nx<=0 || nx<=0) でアウトなやつは弾く
        }   //横サイズNx, 縦サイズNyを入力してください：
        ny行nx列の二次元配列を定義。char型でXとOを書いたらいいと思う
        初期状態をprintf

    }
    while 終了条件を満たしていない間 {
        プレイヤーがマスを選択する {
            コマンドラインでscanf   //どのマス目を選択しますか？
        }
        マス目をアップデート
        マスをプリント
        マス目が終了条件を満たしているか判定
    }
    選択したマスを中心とする十字型の領域の○×を入れ替え {
        UpdateSquare()実行
        コマンドラインにPrintSquare()を実行
    }
}

1.パズルゲームに必要な関数 {
    InitSquare () {

    }
    PrintSquare (二次元配列ポインタ) {
        与えられた関数に対して、縦と横に0,1,2,...のグリッド的なのをつけてプリントする関数
    }
    UpdateSquare (二次元配列ポインタ、選択マス情報ポインタ) {
        ifでマスの値が有効かチェック。値が外れていたら弾くようにする
        二次元配列に対し、選択したマス目に関して入れ替えを行う {
            イテレータの二次元配列を作る
            for (i=0~4) {
                int temp_targetx = 0<=targetx+配列[i][0];
                int temp_targety = 同様;
                if(0<=temp_targetx<NX && そのyバージョン) {
                    その座標を入れ替える
                } else {
                    continue;
                }
            }
        }
    }

}